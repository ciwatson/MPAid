using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace MPAi
{
    /// <summary>
    /// The login screen for the application.
    /// </summary>
    public partial class LoginWindow : Form
    {
        /// <summary>
        /// Default constructor.
        /// </summary>
        public LoginWindow()
        {
            InitializeComponent();
            InitializeUI();
        }

        /// <summary>
        /// Sets up the user interface for the login window.
        /// </summary>
        private void InitializeUI()
        {
            buttonSignUp.ImageNormal = Properties.Resources.ButtonYellow_0;
            buttonSignUp.ImageHighlight = Properties.Resources.ButtonYellow_1;
            buttonSignUp.ImagePressed = Properties.Resources.ButtonYellow_2;

            buttonLogin.ImageNormal = Properties.Resources.ButtonGreen_0;
            buttonLogin.ImageHighlight = Properties.Resources.ButtonGreen_1;
            buttonLogin.ImagePressed = Properties.Resources.ButtonGreen_2;
            // Checks the "Remember Me"checkbox value
            bool autoLog = autoLogin.Checked = Properties.Settings.Default.autoLoginSetting;
            // If the user has been remembered, populate the username and password fields with their username and password.
            if (autoLog)
            {
                MPAiUser lastUser = UserManagement.CurrentUser;
                if (lastUser != null)
                    VisualizeUser(lastUser.getName(), lastUser.getCode());
            }
        }

        /// <summary>
        /// Populates the username and password boxes with the input values.
        /// Code calling this method needs access to the user's password.
        /// </summary>
        /// <param name="username">The value to place in the username box.</param>
        /// <param name="password">The value to place in the password box.</param>
        public void VisualizeUser(string username, string password)
        {
            userNameBox.Text = username;
            codeBox.Text = password;
        }

        /// <summary>
        /// Clears the username and password text boxes.
        /// </summary>
        public void ResetUserInput()
        {
            userNameBox.Clear();
            codeBox.Clear();
        }

        /// <summary>
        /// Authenticates the username and password entered in the text boxes, and shows the main window if the combination is valid.
        /// </summary>
        public void PerformLogin()
        {
            MPAiUser tUser = new MPAiUser(userNameBox.Text, codeBox.Text);
            if (UserManagement.AuthenticateUser(ref tUser))
            {
                Hide(); // This form is the first one the program opens. When it is closed, the program terminates, so we must keep it alive for now.
                MainForm mainWindow = new MainForm();
                mainWindow.SetHomeWindow(this);
                mainWindow.Show();
            }
            else
            {
                if (UserManagement.ContainsUser(tUser))
                {
                    MessageBox.Show("Password is incorrect!",
                    "Oops", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    codeBox.Clear();
                }
                else
                {
                    MessageBox.Show("User does not exist!",
                    "Oops", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    userNameBox.Clear();
                    codeBox.Clear();
                }
            }
        }

        /// <summary>
        /// Handles the functionality of the Login button.
        /// </summary>
        /// <param name="sender">Automatically generated by Visual Studio.</param>
        /// <param name="e">Automatically generated by Visual Studio.</param>
        private void buttonLogin_Click(object sender, EventArgs e)
        {
            PerformLogin();
        }

        /// <summary>
        /// Handles the functionality of the Sign Up button.
        /// </summary>
        /// <param name="sender">Automatically generated by Visual Studio.</param>
        /// <param name="e">Automatically generated by Visual Studio.</param>
        private void buttonSignUp_Click(object sender, EventArgs e)
        {
            //Creates a NewUserWindow object to create a new user.
            NewUserWindow newUserWin = new NewUserWindow();
            newUserWin.ShowDialog(this);
        }

        /// <summary>
        /// Saves any changes made when the form is closed.
        /// </summary>
        /// <param name="sender">Automatically generated by Visual Studio.</param>
        /// <param name="e">Automatically generated by Visual Studio.</param>
        private void LoginWindow_FormClosed(object sender, FormClosedEventArgs e)
        {
            UserManagement.WriteSettings();
            Properties.Settings.Default.Save();
        }
    }
}
